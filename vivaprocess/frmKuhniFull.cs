using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
using DevExpress.DataAccess.ConnectionParameters;
using DevExpress.DataAccess.Sql;

namespace vivaprocess
{
    public partial class frmKuhniFull : DevExpress.XtraEditors.XtraForm
    {
        //private event EventHandler Click;
        string constr;
        OracleConnection con;
        frmReklamac frmReklamacF;
        public frmKuhniFull()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataCategory.Fill();
            sqlDataClients.Fill();
            //sqlDataKuhni.Fill();
            sqlDataTehnolog.Fill();
            sqlDataManager.Fill();
        }

        private void frmKuhniFull_Load(object sender, EventArgs e)
        {
            
        }

        public void refresh_kuhni()
        {
            this.Cursor = System.Windows.Forms.Cursors.WaitCursor;
            OracleConnectionParameters connectionParameters = new OracleConnectionParameters(vivaprocess.Global.ora_serv, "kuhni_modul", "kuhni");
            SqlDataSource ds = new SqlDataSource(connectionParameters);
            CustomSqlQuery query = new CustomSqlQuery();
            query.Name = "customQuery1";
            if (chkFullKuhni.Checked==true)
            { 
                query.Sql = "select distinct PROD_ID as NN,PROD_NAME as NN_КЛИЕНТА,CLIENT_NAME as КЛИЕНТ,PROD_DESCR as ОПИСАНИЕ,"
                            + " PROD_DATE_IN as ДАТА_ПОСТУПЛ,PROD_DATE_NEED as ПЛАН_ОТГРУЗКА,TEHNOLOG as ТЕХНОЛОГ,PROD_DATE_OTGRUZKA as ДАТА_ОТГРУЗКИ,"
                            + " PROD_DESCR_OTGRUZKA as ПРИМЕЧАНИЕ from DISP_KUHNI where prod_date_in is null"
                            + " or (prod_date_in between trunc(ADD_MONTHS((last_day(to_date('" + dateViewZakaz.Text + "','dd.mm.yyyy'))), 0), 'MM')"
                            + " and trunc(last_day(to_date('" + dateViewZakaz.Text + "','dd.mm.yyyy')))) and (vse=1 or vse=" + vivaprocess.Global.vse + ") order by PROD_ID";
            }
            else
            {
                query.Sql = "select distinct PROD_ID as NN,PROD_NAME as NN_КЛИЕНТА,CLIENT_NAME as КЛИЕНТ,PROD_DESCR as ОПИСАНИЕ,"
                            + " PROD_DATE_IN as ДАТА_ПОСТУПЛ,PROD_DATE_NEED as ПЛАН_ОТГРУЗКА,TEHNOLOG as ТЕХНОЛОГ,PROD_DATE_OTGRUZKA as ДАТА_ОТГРУЗКИ,"
                            + " PROD_DESCR_OTGRUZKA as ПРИМЕЧАНИЕ from DISP_KUHNI where prod_date_otgruzka is null and (prod_date_in is null"
                            + " or (prod_date_in between trunc(ADD_MONTHS((last_day(to_date('" + dateViewZakaz.Text + "','dd.mm.yyyy'))), 0), 'MM')"
                            + " and trunc(last_day(to_date('" + dateViewZakaz.Text + "','dd.mm.yyyy'))))) and (vse=1 or vse=" + vivaprocess.Global.vse + ") order by PROD_ID";
            }
            sqlKuhni.Queries.Clear();
            sqlKuhni.Queries.Add(query);
            sqlKuhni.Fill();
            bindKuhni.DataSource = sqlKuhni;
            bindKuhni.DataMember = "customQuery1";
            lookUpKuhni.Properties.DataSource = bindKuhni;
            lookUpKuhni.Properties.ValueMember = "NN";
            lookUpKuhni.Properties.DisplayMember = "NN";
            lookUpKuhni.Properties.PopulateColumns();
            lookUpKuhni.Properties.Columns["NN"].FormatType = DevExpress.Utils.FormatType.Numeric;
            lookUpKuhni.Properties.Columns["NN"].FormatString = "n0";
            this.Cursor = System.Windows.Forms.Cursors.Default;
        }

        private void lookUpKuhni_EditValueChanged(object sender, EventArgs e)
        {
            this.Cursor = System.Windows.Forms.Cursors.WaitCursor;
            string varZakaz = lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString();
            if (varZakaz.IndexOf(',') > -1) { 
                this.Text = "Данные по заказу " + varZakaz.Substring(0, varZakaz.IndexOf(','));
            }
            else if (varZakaz.IndexOf('.') > -1)
            {
                this.Text = "Данные по заказу " + varZakaz.Substring(0, varZakaz.IndexOf('.'));
            }
            else
            {
                this.Text = "Данные по заказу " + varZakaz;
            }
            constr = "User Id=" + vivaprocess.Global.ora_user + "; Password=" + vivaprocess.Global.ora_pass + "; Data Source=" + vivaprocess.Global.ora_serv;
            con = new OracleConnection(constr);
            try
            {
                con.Open();
                OracleCommand cmd = con.CreateCommand();
                cmd.CommandType = CommandType.Text;
                cmd.CommandText = "select item_id,prod_id,ver,prod_name,nvl(prod_descr,' ') prod_descr,prod_in_db_date,nvl(client_name,' ') client_name,nvl(to_char(prod_date_in,'dd.mm.yyyy'),' ') prod_date_in,"
                    + "nvl(to_char(prod_date_need,'dd.mm.yyyy'),' ') prod_date_need,nvl(mat_name,' ') mat_name,nvl(mat_descr,' ') mat_descr,nvl(to_char(date_tehnol,'dd.mm.yyyy'),' ') date_tehnol,"
                    + "nvl(tehnolog,' ') tehnolog,nvl(status,' ') status,nvl(to_char(proizvod_plan,'dd.mm.yyyy'),' ') proizvod_plan,nvl(to_char(proizvod_fakt,'dd.mm.yyyy'),' ') proizvod_fakt,"
                    + "nvl(proizvod_descr,' ') proizvod_descr,nvl(to_char(kraska_plan,'dd.mm.yyyy'),' ') kraska_plan,nvl(to_char(kraska_fakt,'dd.mm.yyyy'),' ') kraska_fakt,nvl(kraska_descr,' ') kraska_descr,"
                    + "nvl(to_char(otk_plan,'dd.mm.yyyy'),' ') otk_plan,nvl(to_char(otk_fakt,'dd.mm.yyyy'),' ') otk_fakt,nvl(to_char(kontrol_sborka_plan,'dd.mm.yyyy'),' ') kontrol_sborka_plan,nvl(to_char(kontrol_sborka_fakt,'dd.mm.yyyy'),' ') kontrol_sborka_fakt,"
                    + "nvl(otk_descr,' ') otk_descr,nvl(to_char(sklad_gotov_plan,'dd.mm.yyyy'),' ') sklad_gotov_plan,nvl(to_char(sklad_gotov_fakt,'dd.mm.yyyy'),' ') sklad_gotov_fakt,nvl(to_char(snabgen_zayavka,'dd.mm.yyyy'),' ') snabgen_zayavka,"
                    + "nvl(snabgen_info,' ') snabgen_info,nvl(material_na_sklad,' ') material_na_sklad,nvl(prod_cena,0) prod_cena,nvl(to_char(prod_date_otgruzka,'dd.mm.yyyy'),' ') prod_date_otgruzka,"
                    + "nvl(prod_descr_otgruzka,' ') prod_descr_otgruzka,nvl(category_slognost,' ') category_slognost,nvl(manager,' ') manager, vse"
                    + " FROM disp_kuhni where prod_id=round(" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex) + ")";
                //cmd.CommandText = "select * FROM disp_kuhni where prod_name='" + lookUpKuhni.Properties.GetDataSourceValue("PROD_NAME", lookUpKuhni.ItemIndex).ToString() + "'";
                OracleDataReader reader = cmd.ExecuteReader();
                while (reader.Read())
                {
                    lookUpClients.EditValue = lookUpClients.Properties.GetKeyValueByDisplayText((string)reader.GetString(6)); //Text = (string)reader.GetString(6);
                    //lookUpClients.Refresh();
                    txtZakazClient.Text = (string)reader.GetString(3);
                    dateInZakaz.Text = (string)reader.GetString(7);
                    //dateInZakaz.Text = (string)reader.GetDateTime(7).ToString("dd.MM.yyyy");
                    dateOtgruzPlan.Text = (string)reader.GetString(8);
                    //dateOtgruzPlan.Text = (string)reader.GetDateTime(8).ToString("dd.MM.yyyy");
                    txtDescr.Text = (string)reader.GetString(4);
                    txtCena.Text = (string)reader.GetDecimal(30).ToString();
                    lookUpCategory.EditValue = lookUpCategory.Properties.GetKeyValueByDisplayText((string)reader.GetString(33)); //Text = (string)reader.GetString(33);
                    //lookUpCategory.Click();
                    lookUpManager.EditValue = lookUpManager.Properties.GetKeyValueByDisplayText((string)reader.GetString(34));
                    dateTehnol.Text = (string)reader.GetString(11);
                    //dateTehnol.Text = (string)reader.GetDateTime(11).ToString("dd.MM.yyyy");
                    lookUpTehnolog.EditValue = lookUpTehnolog.Properties.GetKeyValueByDisplayText((string)reader.GetString(12)); //Text = (string)reader.GetString(12);
                    //lookUpTehnolog.Click();
                    dateOtgruzFakt.Text = (string)reader.GetString(31);
                    //dateOtgruzFakt.Text = (string)reader.GetDateTime(31).ToString("dd.MM.yyyy");                   
                    txtOtgruzkaDescr.Text = (string)reader.GetString(32);
                    chkVse.Checked = Convert.ToBoolean((int)reader.GetDecimal(35));

                    switch ((string)reader.GetString(9))
                    {
                        case "дсп":
                            {
                                txtDsp.Text = (string)reader.GetString(10);
                                dateDspCehPlan.Text = (string)reader.GetString(14);
                                //dateDspCehPlan.Text = (string)reader.GetDateTime(14).ToString("dd.MM.yyyy");
                                dateDspCehFakt.Text = (string)reader.GetString(15);
                                //dateDspCehFakt.Text = (string)reader.GetDateTime(15).ToString("dd.MM.yyyy");
                                txtDspCehDescr.Text = (string)reader.GetString(16);
                                dateDspPokrasPlan.Text = (string)reader.GetString(17);
                                //dateDspPokrasPlan.Text = (string)reader.GetDateTime(17).ToString("dd.MM.yyyy");
                                dateDspPokrasFakt.Text = (string)reader.GetString(18);
                                //dateDspPokrasFakt.Text = (string)reader.GetDateTime(18).ToString("dd.MM.yyyy");
                                dateDspOtkPlan.Text = (string)reader.GetString(20);
                                //dateDspOtkPlan.Text = (string)reader.GetDateTime(20).ToString("dd.MM.yyyy");
                                dateDspOtkFakt.Text = (string)reader.GetString(21);
                                //dateDspOtkFakt.Text = (string)reader.GetDateTime(21).ToString("dd.MM.yyyy");
                                dateDspSborkaPlan.Text = (string)reader.GetString(22);
                                //dateDspSborkaPlan.Text = (string)reader.GetDateTime(22).ToString("dd.MM.yyyy");
                                dateDspSborkaFakt.Text = (string)reader.GetString(23);
                                //dateDspSborkaFakt.Text = (string)reader.GetDateTime(23).ToString("dd.MM.yyyy");
                                txtDspOtkDescr.Text = (string)reader.GetString(24);
                                dateDspSkladPlan.Text = (string)reader.GetString(25);
                                //dateDspSkladPlan.Text = (string)reader.GetDateTime(25).ToString("dd.MM.yyyy");
                                dateDspSkladFakt.Text = (string)reader.GetString(26);
                                //dateDspSkladFakt.Text = (string)reader.GetDateTime(26).ToString("dd.MM.yyyy");
                                dateDspSnabgen.Text = (string)reader.GetString(27);
                                //dateDspSnabgen.Text = (string)reader.GetDateTime(27).ToString("dd.MM.yyyy");
                                txtDspSnabgen.Text = (string)reader.GetString(28);
                                txtDspMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "фасады":
                            {
                                txtFasad.Text = (string)reader.GetString(10);
                                dateFasadCehPlan.Text = (string)reader.GetString(14);
                                dateFasadCehFakt.Text = (string)reader.GetString(15);
                                txtFasadCehDescr.Text = (string)reader.GetString(16);
                                dateFasadPokrasPlan.Text = (string)reader.GetString(17);
                                dateFasadPokrasFakt.Text = (string)reader.GetString(18);
                                dateFasadOtkPlan.Text = (string)reader.GetString(20);
                                dateFasadOtkFakt.Text = (string)reader.GetString(21);
                                dateFasadSborkaPlan.Text = (string)reader.GetString(22);
                                dateFasadSborkaFakt.Text = (string)reader.GetString(23);
                                txtFasadOtkDescr.Text = (string)reader.GetString(24);
                                dateFasadSkladPlan.Text = (string)reader.GetString(25);
                                dateFasadSkladFakt.Text = (string)reader.GetString(26);
                                dateFasadSnabgen.Text = (string)reader.GetString(27);
                                txtFasadSnabgen.Text = (string)reader.GetString(28);
                                txtFasadMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "дсп краска":
                            {
                                txtDspKraska.Text = (string)reader.GetString(10);
                                dateDspKraskaCehPlan.Text = (string)reader.GetString(14);
                                dateDspKraskaCehFakt.Text = (string)reader.GetString(15);
                                txtDspKraskaCehDescr.Text = (string)reader.GetString(16);
                                dateDspKraskaPokrasPlan.Text = (string)reader.GetString(17);
                                dateDspKraskaPokrasFakt.Text = (string)reader.GetString(18);
                                dateDspKraskaOtkPlan.Text = (string)reader.GetString(20);
                                dateDspKraskaOtkFakt.Text = (string)reader.GetString(21);
                                dateDspKraskaSborkaPlan.Text = (string)reader.GetString(22);
                                dateDspKraskaSborkaFakt.Text = (string)reader.GetString(23);
                                txtDspKraskaOtkDescr.Text = (string)reader.GetString(24);
                                dateDspKraskaSkladPlan.Text = (string)reader.GetString(25);
                                dateDspKraskaSkladFakt.Text = (string)reader.GetString(26);
                                dateDspKraskaSnabgen.Text = (string)reader.GetString(27);
                                txtDspKraskaSnabgen.Text = (string)reader.GetString(28);
                                txtDspKraskaMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "двп":
                            {
                                txtDvp.Text = (string)reader.GetString(10);
                                dateDvpCehPlan.Text = (string)reader.GetString(14);
                                dateDvpCehFakt.Text = (string)reader.GetString(15);
                                txtDvpCehDescr.Text = (string)reader.GetString(16);
                                dateDvpPokrasPlan.Text = (string)reader.GetString(17);
                                dateDvpPokrasFakt.Text = (string)reader.GetString(18);
                                dateDvpOtkPlan.Text = (string)reader.GetString(20);
                                dateDvpOtkFakt.Text = (string)reader.GetString(21);
                                dateDvpSborkaPlan.Text = (string)reader.GetString(22);
                                dateDvpSborkaFakt.Text = (string)reader.GetString(23);
                                txtDvpOtkDescr.Text = (string)reader.GetString(24);
                                dateDvpSkladPlan.Text = (string)reader.GetString(25);
                                dateDvpSkladFakt.Text = (string)reader.GetString(26);
                                dateDvpSnabgen.Text = (string)reader.GetString(27);
                                txtDvpSnabgen.Text = (string)reader.GetString(28);
                                txtDvpMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "фурнитура":
                            {
                                txtFurnitura.Text = (string)reader.GetString(10);
                                dateFurniturCehPlan.Text = (string)reader.GetString(14);
                                dateFurniturCehFakt.Text = (string)reader.GetString(15);
                                txtFurniturCehDescr.Text = (string)reader.GetString(16);
                                dateFurniturPokrasPlan.Text = (string)reader.GetString(17);
                                dateFurniturPokrasFakt.Text = (string)reader.GetString(18);
                                dateFurniturOtkPlan.Text = (string)reader.GetString(20);
                                dateFurniturOtkFakt.Text = (string)reader.GetString(21);
                                dateFurniturSborkaPlan.Text = (string)reader.GetString(22);
                                dateFurniturSborkaFakt.Text = (string)reader.GetString(23);
                                txtFurniturOtkDescr.Text = (string)reader.GetString(24);
                                dateFurniturSkladPlan.Text = (string)reader.GetString(25);
                                dateFurniturSkladFakt.Text = (string)reader.GetString(26);
                                dateFurniturSnabgen.Text = (string)reader.GetString(27);
                                txtFurniturSnabgen.Text = (string)reader.GetString(28);
                                txtFurniturMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "витражи":
                            {
                                txtVitrag.Text = (string)reader.GetString(10);
                                dateVitragCehPlan.Text = (string)reader.GetString(14);
                                dateVitragCehFakt.Text = (string)reader.GetString(15);
                                txtVitragCehDescr.Text = (string)reader.GetString(16);
                                dateVitragPokrasPlan.Text = (string)reader.GetString(17);
                                dateVitragPokrasFakt.Text = (string)reader.GetString(18);
                                dateVitragOtkPlan.Text = (string)reader.GetString(20);
                                dateVitragOtkFakt.Text = (string)reader.GetString(21);
                                dateVitragSborkaPlan.Text = (string)reader.GetString(22);
                                dateVitragSborkaFakt.Text = (string)reader.GetString(23);
                                txtVitragOtkDescr.Text = (string)reader.GetString(24);
                                dateVitragSkladPlan.Text = (string)reader.GetString(25);
                                dateVitragSkladFakt.Text = (string)reader.GetString(26);
                                dateVitragSnabgen.Text = (string)reader.GetString(27);
                                txtVitragSnabgen.Text = (string)reader.GetString(28);
                                txtVitragMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "столешница":
                            {
                                txtStoleshnica.Text = (string)reader.GetString(10);
                                dateStoleshCehPlan.Text = (string)reader.GetString(14);
                                dateStoleshCehFakt.Text = (string)reader.GetString(15);
                                txtStoleshCehDescr.Text = (string)reader.GetString(16);
                                dateStoleshPokrasPlan.Text = (string)reader.GetString(17);
                                dateStoleshPokrasFakt.Text = (string)reader.GetString(18);
                                dateStoleshOtkPlan.Text = (string)reader.GetString(20);
                                dateStoleshOtkFakt.Text = (string)reader.GetString(21);
                                dateStoleshSborkaPlan.Text = (string)reader.GetString(22);
                                dateStoleshSborkaFakt.Text = (string)reader.GetString(23);
                                txtStoleshOtkDescr.Text = (string)reader.GetString(24);
                                dateStoleshSkladPlan.Text = (string)reader.GetString(25);
                                dateStoleshSkladFakt.Text = (string)reader.GetString(26);
                                dateStoleshSnabgen.Text = (string)reader.GetString(27);
                                txtStoleshSnabgen.Text = (string)reader.GetString(28);
                                txtStoleshMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "скинали":
                            {
                                txtSkinali.Text = (string)reader.GetString(10);
                                dateSkinaliCehPlan.Text = (string)reader.GetString(14);
                                dateSkinaliCehFakt.Text = (string)reader.GetString(15);
                                txtSkinaliCehDescr.Text = (string)reader.GetString(16);
                                dateSkinaliPokrasPlan.Text = (string)reader.GetString(17);
                                dateSkinaliPokrasFakt.Text = (string)reader.GetString(18);
                                dateSkinaliOtkPlan.Text = (string)reader.GetString(20);
                                dateSkinaliOtkFakt.Text = (string)reader.GetString(21);
                                dateSkinaliSborkaPlan.Text = (string)reader.GetString(22);
                                dateSkinaliSborkaFakt.Text = (string)reader.GetString(23);
                                txtSkinaliOtkDescr.Text = (string)reader.GetString(24);
                                dateSkinaliSkladPlan.Text = (string)reader.GetString(25);
                                dateSkinaliSkladFakt.Text = (string)reader.GetString(26);
                                dateSkinaliSnabgen.Text = (string)reader.GetString(27);
                                txtSkinaliSnabgen.Text = (string)reader.GetString(28);
                                txtSkinaliMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "дополнит.":
                            {
                                txtDopolnit.Text = (string)reader.GetString(10);
                                dateDopolnitCehPlan.Text = (string)reader.GetString(14);
                                dateDopolnitCehFakt.Text = (string)reader.GetString(15);
                                txtDopolnitCehDescr.Text = (string)reader.GetString(16);
                                dateDopolnitPokrasPlan.Text = (string)reader.GetString(17);
                                dateDopolnitPokrasFakt.Text = (string)reader.GetString(18);
                                dateDopolnitOtkPlan.Text = (string)reader.GetString(20);
                                dateDopolnitOtkFakt.Text = (string)reader.GetString(21);
                                dateDopolnitSborkaPlan.Text = (string)reader.GetString(22);
                                dateDopolnitSborkaFakt.Text = (string)reader.GetString(23);
                                txtDopolnitOtkDescr.Text = (string)reader.GetString(24);
                                dateDopolnitSkladPlan.Text = (string)reader.GetString(25);
                                dateDopolnitSkladFakt.Text = (string)reader.GetString(26);
                                dateDopolnitSnabgen.Text = (string)reader.GetString(27);
                                txtDopolnitSnabgen.Text = (string)reader.GetString(28);
                                txtDopolnitMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                    }
                }
            }
            catch (Exception ex)
            {
                DevExpress.XtraEditors.XtraMessageBox.Show(ex.Message);
            }
            finally
            {
                con.Dispose();
            }
            OracleConnectionParameters connectionParameters = new OracleConnectionParameters(vivaprocess.Global.ora_serv, "kuhni_modul", "kuhni");
            SqlDataSource ds = new SqlDataSource(connectionParameters);
            CustomSqlQuery query = new CustomSqlQuery();
            query.Name = "customQuery2";
            query.Sql = "select ITEM_ID,reklamac_name as РЕКЛАМАЦИЯ,date_in as ДАТА_ПОСТУПЛ,"
                        + " date_out as ДАТА_ВЫПОЛН from REKLAMAC where prod_id=round(" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex) + ") order by reklamac_name";
            sqlReklamac.Queries.Clear();
            sqlReklamac.Queries.Add(query);
            sqlReklamac.Fill();
            bindReklamac.DataSource = sqlReklamac;
            bindReklamac.DataMember = "customQuery2";
            lookUpReklamac.Properties.DataSource = bindReklamac;
            lookUpReklamac.Properties.ValueMember = "ITEM_ID";
            lookUpReklamac.Properties.DisplayMember = "РЕКЛАМАЦИЯ";
            lookUpReklamac.Properties.PopulateColumns();
            lookUpReklamac.Properties.Columns["ITEM_ID"].Visible = false;
            this.Cursor = System.Windows.Forms.Cursors.Default;
        }

        private void btnNewZakaz_Click(object sender, EventArgs e)
        {
            if (vivaprocess.Global.vse == 1)
            {
                return;
            }
            if (txtZakazNew.Text.Length>0) 
            {
                constr = "User Id=" + vivaprocess.Global.ora_user + "; Password=" + vivaprocess.Global.ora_pass + "; Data Source=" + vivaprocess.Global.ora_serv;
                con = new OracleConnection(constr);
                try
                {
                    int i;
                    int vItem = 1;
                    int vZakaz = 1;
                    con.Open();
                    OracleCommand cmd = con.CreateCommand();
                    cmd.CommandType = CommandType.Text;
                    cmd.CommandText = "select nvl((SELECT max(item_id) as num FROM disp_kuhni),0)+1 as num from dual";
                    OracleDataReader reader = cmd.ExecuteReader();
                    while (reader.Read())
                    {
                        vItem = (int)reader.GetDecimal(0);
                    }
                    cmd.CommandText = "select nvl((SELECT max(prod_id) as num FROM disp_kuhni),0)+1 as num from dual";
                    reader = cmd.ExecuteReader();
                    while (reader.Read())
                    {
                        vZakaz = (int)reader.GetDecimal(0);
                    }
                    int cnt_new = 1;
                    //string zak_cnt_new = "";
                    for (i = 1; i<=vZakaz+1; i++)
                    {
                        cmd.CommandText = "select distinct disp_kuhni.prod_id from disp_kuhni where disp_kuhni.prod_id=" + i + " order by disp_kuhni.prod_id";
                        reader = cmd.ExecuteReader();
                        if (!reader.Read())
                        {
                            cnt_new = i;
                            break;
                        }
                    }
                    vZakaz = cnt_new;
                    /*while (reader.Read())
                    {
                        if ((string)reader.GetString(0) != cnt_new.ToString())
                        {
                            zak_cnt_new = zak_cnt_new + cnt_new.ToString() + " ";
                        }
                        cnt_new += 1;
                    }*/
                    //txtDescr.Text = zak_cnt_new;
                    //return;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','дсп','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','фасады','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','дсп краска','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','двп','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','фурнитура','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','витражи','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','столешница','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','скинали','нет')";
                    cmd.ExecuteNonQuery();
                    vItem += 1;
                    cmd.CommandText = "insert into disp_kuhni(item_id,prod_id,prod_name,mat_name,mat_descr) values(" + vItem + "," + vZakaz + ",'" + txtZakazNew.Text.Trim() + "','дополнит.','нет')";
                    cmd.ExecuteNonQuery();

                    //dateViewZakaz.Text = dateInZakaz.Text;
                    refresh_kuhni();
                    lookUpKuhni.EditValue = lookUpKuhni.Properties.GetKeyValueByDisplayValue(vZakaz); //.GetKeyValueByDisplayText(vZakaz.ToString());
                    this.Text = "Данные по заказу " + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim();
                    txtZakazNew.Text = "";
                    //UpdateInDB();
                }
                catch (Exception ex)
                {
                    DevExpress.XtraEditors.XtraMessageBox.Show(ex.Message);
                }
                finally
                {
                    con.Dispose();
                }
            }
            else
            {
                DevExpress.XtraEditors.XtraMessageBox.Show("Заполните поле с именем нового заказа клиента..", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnDelZakaz_Click(object sender, EventArgs e)
        {
            if (vivaprocess.Global.vse == 1)
            {
                return;
            }
            DialogResult DelZakaz = DevExpress.XtraEditors.XtraMessageBox.Show("Вы уверены, что хотите удалить заказ ?", "Подтвержедние", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
            if (DelZakaz == System.Windows.Forms.DialogResult.Yes)
            {
                constr = "User Id=" + vivaprocess.Global.ora_user + "; Password=" + vivaprocess.Global.ora_pass + "; Data Source=" + vivaprocess.Global.ora_serv;
                con = new OracleConnection(constr);
                try
                {
                    con.Open();
                    OracleCommand cmd = con.CreateCommand();
                    cmd.CommandText = "delete reklamac where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                    cmd.CommandText = "delete disp_kuhni where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                    sqlDataKuhni.Fill();
                    lookUpKuhni.ItemIndex = -1;
                    this.Text = "Данные по заказу " + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim();
                }
                catch (Exception ex)
                {
                    DevExpress.XtraEditors.XtraMessageBox.Show(ex.Message);
                }
                finally
                {
                    con.Dispose();
                }
                refresh_kuhni();
            }
        }

        private void UpdateInDB()
        {
            /*string zakaz_name = lookUpKuhni.Properties.GetDataSourceValue("PROD_NAME", lookUpKuhni.ItemIndex).ToString().Trim();
            string client_name = lookUpClients.Properties.GetDataSourceValue("CLIENT_NAME", lookUpClients.ItemIndex).ToString().Trim();
            string tehnolog = lookUpTehnolog.Properties.GetDataSourceValue("PERS_NAME", lookUpTehnolog.ItemIndex).ToString().Trim();
            string cat_slogno = lookUpCategory.Properties.GetDataSourceValue("CATEGORY_NAME", lookUpCategory.ItemIndex).ToString().Trim();*/
            constr = "User Id=" + vivaprocess.Global.ora_user + "; Password=" + vivaprocess.Global.ora_pass + "; Data Source=" + vivaprocess.Global.ora_serv;
            con = new OracleConnection(constr);
            try
            {
                con.Open();
                OracleCommand cmd = con.CreateCommand();
                /*cmd.CommandText = "update disp_kuhni set prod_descr='" + txtDescr.Text.Trim() + "',client_name='" + lookUpClients.Properties.GetDataSourceValue("CLIENT_NAME", lookUpClients.ItemIndex).ToString().Trim() + "',prod_date_in=to_date('" + dateInZakaz.Text.Trim()
                    + "','dd.mm.yyyy'),prod_date_need=to_date('" + dateOtgruzPlan.Text + "','dd.mm.yyyy'),date_tehnol=to_date('" + dateTehnol.Text.Trim()
                    + "','dd.mm.yyyy'),tehnolog='" + lookUpTehnolog.Properties.GetDataSourceValue("PERS_NAME", lookUpTehnolog.ItemIndex).ToString().Trim() + "',prod_cena=to_number(" + txtCena.Text.Trim() + "),prod_date_otgruzka=to_date('" + dateOtgruzFakt.Text.Trim()
                    + "','dd.mm.yyyy'),prod_descr_otgruzka='" + txtOtgruzkaDescr.Text.Trim() + "',category_slognost='" + lookUpCategory.Properties.GetDataSourceValue("CATEGORY_NAME", lookUpCategory.ItemIndex).ToString().Trim() + "' where prod_name='" + lookUpKuhni.Properties.GetDataSourceValue("PROD_NAME", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                cmd.ExecuteNonQuery();*/

                cmd.CommandText = "update disp_kuhni set vse=" + Convert.ToInt32(chkVse.Checked) + " where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                cmd.ExecuteNonQuery();
                if (txtDescr.Text.Trim().Length>0)
                {
                    cmd.CommandText = "update disp_kuhni set prod_descr='" + txtDescr.Text.Trim() + "' where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (txtZakazClient.Text.Trim().Length > 0)
                {
                    cmd.CommandText = "update disp_kuhni set prod_name='" + txtZakazClient.Text.Trim() + "' where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (lookUpClients.ItemIndex >= 0)
                {
                    cmd.CommandText = "update disp_kuhni set client_name='" + lookUpClients.Properties.GetDataSourceValue("CLIENT_NAME", lookUpClients.ItemIndex).ToString().Trim() + "' where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (dateInZakaz.Text.Trim().Length > 0)
                {
                    cmd.CommandText = "update disp_kuhni set prod_date_in=to_date('" + dateInZakaz.DateTime.ToShortDateString() + "','dd.mm.yyyy') where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (dateOtgruzPlan.Text.Trim().Length > 0)
                {
                    cmd.CommandText = "update disp_kuhni set prod_date_need=to_date('" + dateOtgruzPlan.DateTime.ToShortDateString() + "','dd.mm.yyyy') where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (dateTehnol.Text.Trim().Length > 0)
                {
                    cmd.CommandText = "update disp_kuhni set date_tehnol=to_date('" + dateTehnol.DateTime.ToShortDateString() + "','dd.mm.yyyy') where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (lookUpTehnolog.ItemIndex >= 0)
                {
                    cmd.CommandText = "update disp_kuhni set tehnolog='" + lookUpTehnolog.Properties.GetDataSourceValue("PERS_NAME", lookUpTehnolog.ItemIndex).ToString().Trim() + "' where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (lookUpManager.ItemIndex >= 0)
                {
                    cmd.CommandText = "update disp_kuhni set manager='" + lookUpManager.Properties.GetDataSourceValue("PERS_NAME", lookUpManager.ItemIndex).ToString().Trim() + "' where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (txtCena.Text.Trim().Length > 0)
                {
                    cmd.CommandText = "update disp_kuhni set prod_cena=to_number(" + txtCena.Text.Trim() + ") where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (dateOtgruzFakt.Text.Trim().Length > 0)
                {
                    cmd.CommandText = "update disp_kuhni set prod_date_otgruzka=to_date('" + dateOtgruzFakt.DateTime.ToShortDateString() + "','dd.mm.yyyy') where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                else
                {
                    cmd.CommandText = "update disp_kuhni set prod_date_otgruzka=null where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (txtOtgruzkaDescr.Text.Trim().Length > 0)
                {
                    cmd.CommandText = "update disp_kuhni set prod_descr_otgruzka='" + txtOtgruzkaDescr.Text.Trim() + "' where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }
                if (lookUpCategory.ItemIndex >= 0)
                {
                    cmd.CommandText = "update disp_kuhni set category_slognost='" + lookUpCategory.Properties.GetDataSourceValue("CATEGORY_NAME", lookUpCategory.ItemIndex).ToString().Trim() + "' where prod_id='" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                    cmd.ExecuteNonQuery();
                }

                /*cmd.CommandText = "update disp_kuhni set prod_descr='" + txtDescr.Text.Trim() + "',client_name='" + lookUpClients.Properties.GetDataSourceValue("CLIENT_NAME", lookUpClients.ItemIndex).ToString().Trim() + "',prod_date_in=trunc(to_date('" + dateInZakaz.Text
                    + "','dd.mm.yyyy')),prod_date_need=trunc(to_date('" + dateOtgruzPlan.Text + "','dd.mm.yyyy')),date_tehnol=trunc(to_date('" + dateTehnol.Text
                    + "','dd.mm.yyyy')),tehnolog='" + lookUpTehnolog.Properties.GetDataSourceValue("PERS_NAME", lookUpTehnolog.ItemIndex).ToString().Trim() + "',prod_cena=to_number(" + txtCena.Text + "),prod_date_otgruzka=trunc(to_date('" + dateOtgruzFakt.Text
                    + "','dd.mm.yyyy')),prod_descr_otgruzka='" + txtOtgruzkaDescr.Text.Trim() + "',category_slognost='" + lookUpCategory.Properties.GetDataSourceValue("CATEGORY_NAME", lookUpCategory.ItemIndex).ToString().Trim() + "' where prod_name='" + lookUpKuhni.Properties.GetDataSourceValue("PROD_NAME", lookUpKuhni.ItemIndex).ToString().Trim() + "'";
                cmd.ExecuteNonQuery();*/
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtDsp.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateDspCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateDspCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtDspCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateDspPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateDspPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateDspOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateDspOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateDspSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateDspSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtDspOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateDspSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateDspSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateDspSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtDspSnabgen.Text.Trim() + "',material_na_sklad='" + txtDspMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='дсп'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtFasad.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateFasadCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateFasadCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtFasadCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateFasadPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateFasadPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateFasadOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateFasadOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateFasadSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateFasadSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtFasadOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateFasadSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateFasadSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateFasadSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtFasadSnabgen.Text.Trim() + "',material_na_sklad='" + txtFasadMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='фасады'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtDspKraska.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateDspKraskaCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateDspKraskaCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtDspKraskaCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateDspKraskaPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateDspKraskaPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateDspKraskaOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateDspKraskaOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateDspKraskaSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateDspKraskaSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtDspKraskaOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateDspKraskaSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateDspKraskaSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateDspKraskaSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtDspKraskaSnabgen.Text.Trim() + "',material_na_sklad='" + txtDspKraskaMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='дсп краска'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtDvp.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateDvpCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateDvpCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtDvpCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateDvpPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateDvpPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateDvpOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateDvpOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateDvpSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateDvpSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtDvpOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateDvpSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateDvpSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateDvpSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtDvpSnabgen.Text.Trim() + "',material_na_sklad='" + txtDvpMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='двп'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtFurnitura.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateFurniturCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateFurniturCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtFurniturCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateFurniturPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateFurniturPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateFurniturOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateFurniturOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateFurniturSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateFurniturSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtFurniturOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateFurniturSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateFurniturSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateFurniturSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtFurniturSnabgen.Text.Trim() + "',material_na_sklad='" + txtFurniturMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='фурнитура'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtVitrag.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateVitragCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateVitragCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtVitragCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateVitragPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateVitragPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateVitragOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateVitragOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateVitragSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateVitragSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtVitragOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateVitragSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateVitragSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateVitragSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtVitragSnabgen.Text.Trim() + "',material_na_sklad='" + txtVitragMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='витражи'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtStoleshnica.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateStoleshCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateStoleshCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtStoleshCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateStoleshPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateStoleshPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateStoleshOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateStoleshOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateStoleshSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateStoleshSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtStoleshOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateStoleshSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateStoleshSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateStoleshSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtStoleshSnabgen.Text.Trim() + "',material_na_sklad='" + txtStoleshMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='столешница'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtSkinali.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateSkinaliCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateSkinaliCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtSkinaliCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateSkinaliPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateSkinaliPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateSkinaliOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateSkinaliOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateSkinaliSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateSkinaliSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtSkinaliOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateSkinaliSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateSkinaliSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateSkinaliSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtSkinaliSnabgen.Text.Trim() + "',material_na_sklad='" + txtSkinaliMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='скинали'";
                cmd.ExecuteNonQuery();
                cmd.CommandText = "update disp_kuhni set mat_descr='" + txtDopolnit.Text.Trim() + "',proizvod_plan=trunc(to_date('" + dateDopolnitCehPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),proizvod_fakt=trunc(to_date('" + dateDopolnitCehFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),proizvod_descr='" + txtDopolnitCehDescr.Text.Trim()
                    + "',kraska_plan=trunc(to_date('" + dateDopolnitPokrasPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kraska_fakt=trunc(to_date('" + dateDopolnitPokrasFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_plan=trunc(to_date('" + dateDopolnitOtkPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),otk_fakt=trunc(to_date('" + dateDopolnitOtkFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_plan=trunc(to_date('" + dateDopolnitSborkaPlan.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),kontrol_sborka_fakt=trunc(to_date('" + dateDopolnitSborkaFakt.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),otk_descr='" + txtDopolnitOtkDescr.Text.Trim() + "',sklad_gotov_plan=trunc(to_date('" + dateDopolnitSkladPlan.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),sklad_gotov_fakt=trunc(to_date('" + dateDopolnitSkladFakt.Text.Trim() + "','dd.mm.yyyy hh24:mi:ss')),snabgen_zayavka=trunc(to_date('" + dateDopolnitSnabgen.Text.Trim()
                    + "','dd.mm.yyyy hh24:mi:ss')),snabgen_info='" + txtDopolnitSnabgen.Text.Trim() + "',material_na_sklad='" + txtDopolnitMatNaSklad.Text.Trim() + "' where prod_id=" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim() + " and mat_name='дополнит.'";
                cmd.ExecuteNonQuery();
                refresh_kuhni();
            }
            catch
            {
                DevExpress.XtraEditors.XtraMessageBox.Show("Не все данные введены!"); //ex.Message
            }
            finally
            {
                con.Dispose();
            }
        }

        private void btnSaveZakaz_Click(object sender, EventArgs e)
        {
            if (vivaprocess.Global.vse == 1)
            {
                return;
            }
            this.Cursor = System.Windows.Forms.Cursors.WaitCursor;
            UpdateInDB();
            this.Cursor = System.Windows.Forms.Cursors.Default;
        }

        private void btnCategory_Click(object sender, EventArgs e)
        {
            this.Cursor = System.Windows.Forms.Cursors.WaitCursor;
            if (lookUpKuhni.ItemIndex >= 0)
            {
                int catOtgruz=0, catTehnol=0, catCeh=0, catSnabgenie=0, catKraska=0, catOtk=0, catKontrol_sborka=0, catSklad=0;
                string constr = "User Id=" + vivaprocess.Global.ora_user + "; Password=" + vivaprocess.Global.ora_pass + "; Data Source=" + vivaprocess.Global.ora_serv;
                OracleConnection con = new OracleConnection(constr);
                try
                {
                    con.Open();
                    OracleCommand cmd = con.CreateCommand();
                    cmd.CommandType = CommandType.Text;
                    cmd.CommandText = "SELECT otgruz,tehnol,ceh,snabgenie,kraska,otk,kontrol_sborka,sklad as num FROM CATEGORY_SLOGN where category_name='"
                        + lookUpCategory.Properties.GetDataSourceValue("CATEGORY_NAME", lookUpCategory.ItemIndex).ToString().Trim() + "'";
                    OracleDataReader reader = cmd.ExecuteReader();
                    while (reader.Read())
                    {
                        catOtgruz = (int)reader.GetDecimal(0);
                        catTehnol = (int)reader.GetDecimal(1);
                        catCeh = (int)reader.GetDecimal(2);
                        catSnabgenie = (int)reader.GetDecimal(3);
                        catKraska = (int)reader.GetDecimal(4);
                        catOtk = (int)reader.GetDecimal(5);
                        catKontrol_sborka = (int)reader.GetDecimal(6);
                        catSklad = (int)reader.GetDecimal(7);
                    }
                }
                catch (Exception ex)
                {
                    DevExpress.XtraEditors.XtraMessageBox.Show(ex.Message);
                }
                finally
                {
                    con.Dispose();
                }
                dateOtgruzPlan.Text = dateInZakaz.DateTime.AddDays(catOtgruz).ToString();
                dateTehnol.Text = dateInZakaz.DateTime.AddDays(catTehnol).ToString();
                
                dateDspCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateFasadCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateDspKraskaCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateDvpCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateFurniturCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateVitragCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateStoleshCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateSkinaliCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();
                dateDopolnitCehPlan.Text = dateInZakaz.DateTime.AddDays(catCeh).ToString();

                dateDspPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateFasadPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateDspKraskaPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateDvpPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateFurniturPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateVitragPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateStoleshPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateSkinaliPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();
                dateDopolnitPokrasPlan.Text = dateInZakaz.DateTime.AddDays(catKraska).ToString();

                dateDspOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateFasadOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateDspKraskaOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateDvpOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateFurniturOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateVitragOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateStoleshOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateSkinaliOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();
                dateDopolnitOtkPlan.Text = dateInZakaz.DateTime.AddDays(catOtk).ToString();

                dateDspSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateFasadSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateDspKraskaSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateDvpSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateFurniturSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateVitragSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateStoleshSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateSkinaliSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();
                dateDopolnitSborkaPlan.Text = dateInZakaz.DateTime.AddDays(catKontrol_sborka).ToString();

                dateDspSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateFasadSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateDspKraskaSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateDvpSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateFurniturSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateVitragSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateStoleshSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateSkinaliSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();
                dateDopolnitSkladPlan.Text = dateInZakaz.DateTime.AddDays(catSklad).ToString();

                dateDspSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateFasadSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateDspKraskaSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateDvpSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateFurniturSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateVitragSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateStoleshSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateSkinaliSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
                dateDopolnitSnabgen.Text = dateInZakaz.DateTime.AddDays(catSnabgenie).ToString();
        }
            this.Cursor = System.Windows.Forms.Cursors.Default;
        }

        private void btnClearForm_Click(object sender, EventArgs e)
        {
            /*this.Refresh();
            this.Activate();*/
        }

        private void dateViewZakaz_EditValueChanged(object sender, EventArgs e)
        {
            refresh_kuhni();
        }

        private void btnAddReklamac_Click(object sender, EventArgs e)
        {
            if (vivaprocess.Global.vse == 1)
            {
                return;
            }
            if (lookUpKuhni.ItemIndex >= 0)
            {
                vivaprocess.Global.zakazReklamac = lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex).ToString().Trim();
                vivaprocess.Global.zakazReklamacD = dateInZakaz.Text;
                vivaprocess.Global.zakazReklamacC = txtZakazClient.Text;
                vivaprocess.Global.zakazReklamacCl = lookUpClients.Properties.GetDataSourceValue("CLIENT_NAME", lookUpClients.ItemIndex).ToString().Trim();
                if (frmReklamacF == null || frmReklamacF.IsDisposed)
                {
                    frmReklamacF = new frmReklamac();
                    frmReklamacF.MdiParent = frmMain.ActiveForm;
                    frmReklamacF.Show();
                }
                else
                {
                    frmReklamacF.Activate();
                }
            }
        }

        private void chkFullKuhni_CheckedChanged(object sender, EventArgs e)
        {
            refresh_kuhni();
        }

        public void kuhnya_from_slegenie()
        {
            this.Cursor = System.Windows.Forms.Cursors.WaitCursor;
            string varZakaz = "";
            if (varZakaz.IndexOf(',') > -1)
            {
                this.Text = "Данные по заказу " + varZakaz.Substring(0, varZakaz.IndexOf(','));
            }
            else if (varZakaz.IndexOf('.') > -1)
            {
                this.Text = "Данные по заказу " + varZakaz.Substring(0, varZakaz.IndexOf('.'));
            }
            else
            {
                this.Text = "Данные по заказу " + varZakaz;
            }
            constr = "User Id=" + vivaprocess.Global.ora_user + "; Password=" + vivaprocess.Global.ora_pass + "; Data Source=" + vivaprocess.Global.ora_serv;
            con = new OracleConnection(constr);
            try
            {
                con.Open();
                OracleCommand cmd = con.CreateCommand();
                cmd.CommandType = CommandType.Text;
                cmd.CommandText = "select item_id,prod_id,ver,prod_name,nvl(prod_descr,' ') prod_descr,prod_in_db_date,nvl(client_name,' ') client_name,nvl(to_char(prod_date_in,'dd.mm.yyyy'),' ') prod_date_in,"
                    + "nvl(to_char(prod_date_need,'dd.mm.yyyy'),' ') prod_date_need,nvl(mat_name,' ') mat_name,nvl(mat_descr,' ') mat_descr,nvl(to_char(date_tehnol,'dd.mm.yyyy'),' ') date_tehnol,"
                    + "nvl(tehnolog,' ') tehnolog,nvl(status,' ') status,nvl(to_char(proizvod_plan,'dd.mm.yyyy'),' ') proizvod_plan,nvl(to_char(proizvod_fakt,'dd.mm.yyyy'),' ') proizvod_fakt,"
                    + "nvl(proizvod_descr,' ') proizvod_descr,nvl(to_char(kraska_plan,'dd.mm.yyyy'),' ') kraska_plan,nvl(to_char(kraska_fakt,'dd.mm.yyyy'),' ') kraska_fakt,nvl(kraska_descr,' ') kraska_descr,"
                    + "nvl(to_char(otk_plan,'dd.mm.yyyy'),' ') otk_plan,nvl(to_char(otk_fakt,'dd.mm.yyyy'),' ') otk_fakt,nvl(to_char(kontrol_sborka_plan,'dd.mm.yyyy'),' ') kontrol_sborka_plan,nvl(to_char(kontrol_sborka_fakt,'dd.mm.yyyy'),' ') kontrol_sborka_fakt,"
                    + "nvl(otk_descr,' ') otk_descr,nvl(to_char(sklad_gotov_plan,'dd.mm.yyyy'),' ') sklad_gotov_plan,nvl(to_char(sklad_gotov_fakt,'dd.mm.yyyy'),' ') sklad_gotov_fakt,nvl(to_char(snabgen_zayavka,'dd.mm.yyyy'),' ') snabgen_zayavka,"
                    + "nvl(snabgen_info,' ') snabgen_info,nvl(material_na_sklad,' ') material_na_sklad,nvl(prod_cena,0) prod_cena,nvl(to_char(prod_date_otgruzka,'dd.mm.yyyy'),' ') prod_date_otgruzka,"
                    + "nvl(prod_descr_otgruzka,' ') prod_descr_otgruzka,nvl(category_slognost,' ') category_slognost,nvl(manager,' ') manager, vse"
                    + " FROM disp_kuhni where prod_id=round(" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex) + ")";
                //cmd.CommandText = "select * FROM disp_kuhni where prod_name='" + lookUpKuhni.Properties.GetDataSourceValue("PROD_NAME", lookUpKuhni.ItemIndex).ToString() + "'";
                OracleDataReader reader = cmd.ExecuteReader();
                while (reader.Read())
                {
                    lookUpClients.EditValue = lookUpClients.Properties.GetKeyValueByDisplayText((string)reader.GetString(6)); //Text = (string)reader.GetString(6);
                    //lookUpClients.Refresh();
                    txtZakazClient.Text = (string)reader.GetString(3);
                    dateInZakaz.Text = (string)reader.GetString(7);
                    //dateInZakaz.Text = (string)reader.GetDateTime(7).ToString("dd.MM.yyyy");
                    dateOtgruzPlan.Text = (string)reader.GetString(8);
                    //dateOtgruzPlan.Text = (string)reader.GetDateTime(8).ToString("dd.MM.yyyy");
                    txtDescr.Text = (string)reader.GetString(4);
                    txtCena.Text = (string)reader.GetDecimal(30).ToString();
                    lookUpCategory.EditValue = lookUpCategory.Properties.GetKeyValueByDisplayText((string)reader.GetString(33)); //Text = (string)reader.GetString(33);
                    //lookUpCategory.Click();
                    lookUpManager.EditValue = lookUpManager.Properties.GetKeyValueByDisplayText((string)reader.GetString(34));
                    dateTehnol.Text = (string)reader.GetString(11);
                    //dateTehnol.Text = (string)reader.GetDateTime(11).ToString("dd.MM.yyyy");
                    lookUpTehnolog.EditValue = lookUpTehnolog.Properties.GetKeyValueByDisplayText((string)reader.GetString(12)); //Text = (string)reader.GetString(12);
                    //lookUpTehnolog.Click();
                    dateOtgruzFakt.Text = (string)reader.GetString(31);
                    //dateOtgruzFakt.Text = (string)reader.GetDateTime(31).ToString("dd.MM.yyyy");                   
                    txtOtgruzkaDescr.Text = (string)reader.GetString(32);
                    chkVse.Checked = Convert.ToBoolean((int)reader.GetDecimal(35));

                    switch ((string)reader.GetString(9))
                    {
                        case "дсп":
                            {
                                txtDsp.Text = (string)reader.GetString(10);
                                dateDspCehPlan.Text = (string)reader.GetString(14);
                                //dateDspCehPlan.Text = (string)reader.GetDateTime(14).ToString("dd.MM.yyyy");
                                dateDspCehFakt.Text = (string)reader.GetString(15);
                                //dateDspCehFakt.Text = (string)reader.GetDateTime(15).ToString("dd.MM.yyyy");
                                txtDspCehDescr.Text = (string)reader.GetString(16);
                                dateDspPokrasPlan.Text = (string)reader.GetString(17);
                                //dateDspPokrasPlan.Text = (string)reader.GetDateTime(17).ToString("dd.MM.yyyy");
                                dateDspPokrasFakt.Text = (string)reader.GetString(18);
                                //dateDspPokrasFakt.Text = (string)reader.GetDateTime(18).ToString("dd.MM.yyyy");
                                dateDspOtkPlan.Text = (string)reader.GetString(20);
                                //dateDspOtkPlan.Text = (string)reader.GetDateTime(20).ToString("dd.MM.yyyy");
                                dateDspOtkFakt.Text = (string)reader.GetString(21);
                                //dateDspOtkFakt.Text = (string)reader.GetDateTime(21).ToString("dd.MM.yyyy");
                                dateDspSborkaPlan.Text = (string)reader.GetString(22);
                                //dateDspSborkaPlan.Text = (string)reader.GetDateTime(22).ToString("dd.MM.yyyy");
                                dateDspSborkaFakt.Text = (string)reader.GetString(23);
                                //dateDspSborkaFakt.Text = (string)reader.GetDateTime(23).ToString("dd.MM.yyyy");
                                txtDspOtkDescr.Text = (string)reader.GetString(24);
                                dateDspSkladPlan.Text = (string)reader.GetString(25);
                                //dateDspSkladPlan.Text = (string)reader.GetDateTime(25).ToString("dd.MM.yyyy");
                                dateDspSkladFakt.Text = (string)reader.GetString(26);
                                //dateDspSkladFakt.Text = (string)reader.GetDateTime(26).ToString("dd.MM.yyyy");
                                dateDspSnabgen.Text = (string)reader.GetString(27);
                                //dateDspSnabgen.Text = (string)reader.GetDateTime(27).ToString("dd.MM.yyyy");
                                txtDspSnabgen.Text = (string)reader.GetString(28);
                                txtDspMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "фасады":
                            {
                                txtFasad.Text = (string)reader.GetString(10);
                                dateFasadCehPlan.Text = (string)reader.GetString(14);
                                dateFasadCehFakt.Text = (string)reader.GetString(15);
                                txtFasadCehDescr.Text = (string)reader.GetString(16);
                                dateFasadPokrasPlan.Text = (string)reader.GetString(17);
                                dateFasadPokrasFakt.Text = (string)reader.GetString(18);
                                dateFasadOtkPlan.Text = (string)reader.GetString(20);
                                dateFasadOtkFakt.Text = (string)reader.GetString(21);
                                dateFasadSborkaPlan.Text = (string)reader.GetString(22);
                                dateFasadSborkaFakt.Text = (string)reader.GetString(23);
                                txtFasadOtkDescr.Text = (string)reader.GetString(24);
                                dateFasadSkladPlan.Text = (string)reader.GetString(25);
                                dateFasadSkladFakt.Text = (string)reader.GetString(26);
                                dateFasadSnabgen.Text = (string)reader.GetString(27);
                                txtFasadSnabgen.Text = (string)reader.GetString(28);
                                txtFasadMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "дсп краска":
                            {
                                txtDspKraska.Text = (string)reader.GetString(10);
                                dateDspKraskaCehPlan.Text = (string)reader.GetString(14);
                                dateDspKraskaCehFakt.Text = (string)reader.GetString(15);
                                txtDspKraskaCehDescr.Text = (string)reader.GetString(16);
                                dateDspKraskaPokrasPlan.Text = (string)reader.GetString(17);
                                dateDspKraskaPokrasFakt.Text = (string)reader.GetString(18);
                                dateDspKraskaOtkPlan.Text = (string)reader.GetString(20);
                                dateDspKraskaOtkFakt.Text = (string)reader.GetString(21);
                                dateDspKraskaSborkaPlan.Text = (string)reader.GetString(22);
                                dateDspKraskaSborkaFakt.Text = (string)reader.GetString(23);
                                txtDspKraskaOtkDescr.Text = (string)reader.GetString(24);
                                dateDspKraskaSkladPlan.Text = (string)reader.GetString(25);
                                dateDspKraskaSkladFakt.Text = (string)reader.GetString(26);
                                dateDspKraskaSnabgen.Text = (string)reader.GetString(27);
                                txtDspKraskaSnabgen.Text = (string)reader.GetString(28);
                                txtDspKraskaMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "двп":
                            {
                                txtDvp.Text = (string)reader.GetString(10);
                                dateDvpCehPlan.Text = (string)reader.GetString(14);
                                dateDvpCehFakt.Text = (string)reader.GetString(15);
                                txtDvpCehDescr.Text = (string)reader.GetString(16);
                                dateDvpPokrasPlan.Text = (string)reader.GetString(17);
                                dateDvpPokrasFakt.Text = (string)reader.GetString(18);
                                dateDvpOtkPlan.Text = (string)reader.GetString(20);
                                dateDvpOtkFakt.Text = (string)reader.GetString(21);
                                dateDvpSborkaPlan.Text = (string)reader.GetString(22);
                                dateDvpSborkaFakt.Text = (string)reader.GetString(23);
                                txtDvpOtkDescr.Text = (string)reader.GetString(24);
                                dateDvpSkladPlan.Text = (string)reader.GetString(25);
                                dateDvpSkladFakt.Text = (string)reader.GetString(26);
                                dateDvpSnabgen.Text = (string)reader.GetString(27);
                                txtDvpSnabgen.Text = (string)reader.GetString(28);
                                txtDvpMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "фурнитура":
                            {
                                txtFurnitura.Text = (string)reader.GetString(10);
                                dateFurniturCehPlan.Text = (string)reader.GetString(14);
                                dateFurniturCehFakt.Text = (string)reader.GetString(15);
                                txtFurniturCehDescr.Text = (string)reader.GetString(16);
                                dateFurniturPokrasPlan.Text = (string)reader.GetString(17);
                                dateFurniturPokrasFakt.Text = (string)reader.GetString(18);
                                dateFurniturOtkPlan.Text = (string)reader.GetString(20);
                                dateFurniturOtkFakt.Text = (string)reader.GetString(21);
                                dateFurniturSborkaPlan.Text = (string)reader.GetString(22);
                                dateFurniturSborkaFakt.Text = (string)reader.GetString(23);
                                txtFurniturOtkDescr.Text = (string)reader.GetString(24);
                                dateFurniturSkladPlan.Text = (string)reader.GetString(25);
                                dateFurniturSkladFakt.Text = (string)reader.GetString(26);
                                dateFurniturSnabgen.Text = (string)reader.GetString(27);
                                txtFurniturSnabgen.Text = (string)reader.GetString(28);
                                txtFurniturMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "витражи":
                            {
                                txtVitrag.Text = (string)reader.GetString(10);
                                dateVitragCehPlan.Text = (string)reader.GetString(14);
                                dateVitragCehFakt.Text = (string)reader.GetString(15);
                                txtVitragCehDescr.Text = (string)reader.GetString(16);
                                dateVitragPokrasPlan.Text = (string)reader.GetString(17);
                                dateVitragPokrasFakt.Text = (string)reader.GetString(18);
                                dateVitragOtkPlan.Text = (string)reader.GetString(20);
                                dateVitragOtkFakt.Text = (string)reader.GetString(21);
                                dateVitragSborkaPlan.Text = (string)reader.GetString(22);
                                dateVitragSborkaFakt.Text = (string)reader.GetString(23);
                                txtVitragOtkDescr.Text = (string)reader.GetString(24);
                                dateVitragSkladPlan.Text = (string)reader.GetString(25);
                                dateVitragSkladFakt.Text = (string)reader.GetString(26);
                                dateVitragSnabgen.Text = (string)reader.GetString(27);
                                txtVitragSnabgen.Text = (string)reader.GetString(28);
                                txtVitragMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "столешница":
                            {
                                txtStoleshnica.Text = (string)reader.GetString(10);
                                dateStoleshCehPlan.Text = (string)reader.GetString(14);
                                dateStoleshCehFakt.Text = (string)reader.GetString(15);
                                txtStoleshCehDescr.Text = (string)reader.GetString(16);
                                dateStoleshPokrasPlan.Text = (string)reader.GetString(17);
                                dateStoleshPokrasFakt.Text = (string)reader.GetString(18);
                                dateStoleshOtkPlan.Text = (string)reader.GetString(20);
                                dateStoleshOtkFakt.Text = (string)reader.GetString(21);
                                dateStoleshSborkaPlan.Text = (string)reader.GetString(22);
                                dateStoleshSborkaFakt.Text = (string)reader.GetString(23);
                                txtStoleshOtkDescr.Text = (string)reader.GetString(24);
                                dateStoleshSkladPlan.Text = (string)reader.GetString(25);
                                dateStoleshSkladFakt.Text = (string)reader.GetString(26);
                                dateStoleshSnabgen.Text = (string)reader.GetString(27);
                                txtStoleshSnabgen.Text = (string)reader.GetString(28);
                                txtStoleshMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "скинали":
                            {
                                txtSkinali.Text = (string)reader.GetString(10);
                                dateSkinaliCehPlan.Text = (string)reader.GetString(14);
                                dateSkinaliCehFakt.Text = (string)reader.GetString(15);
                                txtSkinaliCehDescr.Text = (string)reader.GetString(16);
                                dateSkinaliPokrasPlan.Text = (string)reader.GetString(17);
                                dateSkinaliPokrasFakt.Text = (string)reader.GetString(18);
                                dateSkinaliOtkPlan.Text = (string)reader.GetString(20);
                                dateSkinaliOtkFakt.Text = (string)reader.GetString(21);
                                dateSkinaliSborkaPlan.Text = (string)reader.GetString(22);
                                dateSkinaliSborkaFakt.Text = (string)reader.GetString(23);
                                txtSkinaliOtkDescr.Text = (string)reader.GetString(24);
                                dateSkinaliSkladPlan.Text = (string)reader.GetString(25);
                                dateSkinaliSkladFakt.Text = (string)reader.GetString(26);
                                dateSkinaliSnabgen.Text = (string)reader.GetString(27);
                                txtSkinaliSnabgen.Text = (string)reader.GetString(28);
                                txtSkinaliMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                        case "дополнит.":
                            {
                                txtDopolnit.Text = (string)reader.GetString(10);
                                dateDopolnitCehPlan.Text = (string)reader.GetString(14);
                                dateDopolnitCehFakt.Text = (string)reader.GetString(15);
                                txtDopolnitCehDescr.Text = (string)reader.GetString(16);
                                dateDopolnitPokrasPlan.Text = (string)reader.GetString(17);
                                dateDopolnitPokrasFakt.Text = (string)reader.GetString(18);
                                dateDopolnitOtkPlan.Text = (string)reader.GetString(20);
                                dateDopolnitOtkFakt.Text = (string)reader.GetString(21);
                                dateDopolnitSborkaPlan.Text = (string)reader.GetString(22);
                                dateDopolnitSborkaFakt.Text = (string)reader.GetString(23);
                                txtDopolnitOtkDescr.Text = (string)reader.GetString(24);
                                dateDopolnitSkladPlan.Text = (string)reader.GetString(25);
                                dateDopolnitSkladFakt.Text = (string)reader.GetString(26);
                                dateDopolnitSnabgen.Text = (string)reader.GetString(27);
                                txtDopolnitSnabgen.Text = (string)reader.GetString(28);
                                txtDopolnitMatNaSklad.Text = (string)reader.GetString(29);
                                break;
                            }
                    }
                }
            }
            catch (Exception ex)
            {
                DevExpress.XtraEditors.XtraMessageBox.Show(ex.Message);
            }
            finally
            {
                con.Dispose();
            }
            OracleConnectionParameters connectionParameters = new OracleConnectionParameters(vivaprocess.Global.ora_serv, "kuhni_modul", "kuhni");
            SqlDataSource ds = new SqlDataSource(connectionParameters);
            CustomSqlQuery query = new CustomSqlQuery();
            query.Name = "customQuery2";
            query.Sql = "select ITEM_ID,reklamac_name as РЕКЛАМАЦИЯ,date_in as ДАТА_ПОСТУПЛ,"
                        + " date_out as ДАТА_ВЫПОЛН from REKLAMAC where prod_id=round(" + lookUpKuhni.Properties.GetDataSourceValue("NN", lookUpKuhni.ItemIndex) + ") order by reklamac_name";
            sqlReklamac.Queries.Clear();
            sqlReklamac.Queries.Add(query);
            sqlReklamac.Fill();
            bindReklamac.DataSource = sqlReklamac;
            bindReklamac.DataMember = "customQuery2";
            lookUpReklamac.Properties.DataSource = bindReklamac;
            lookUpReklamac.Properties.ValueMember = "ITEM_ID";
            lookUpReklamac.Properties.DisplayMember = "РЕКЛАМАЦИЯ";
            lookUpReklamac.Properties.PopulateColumns();
            lookUpReklamac.Properties.Columns["ITEM_ID"].Visible = false;
            this.Cursor = System.Windows.Forms.Cursors.Default;
        }

        private void frmKuhniFull_Activated(object sender, EventArgs e)
        {
            //lookUpKuhni.ItemIndex = 0;
            dateInZakaz.Text = DateTime.Now.ToString("dd.MM.yyyy");
            dateViewZakaz.Text = DateTime.Now.ToString("dd.MM.yyyy");

            if (vivaprocess.Global.slegFlag == 1)
            {
                dateViewZakaz.Text = vivaprocess.Global.slegDate;
            }
            refresh_kuhni();
            if (vivaprocess.Global.slegFlag == 1)
            {
                chkFullKuhni.Checked = true;
                lookUpKuhni.EditValue = lookUpKuhni.Properties.GetKeyValueByDisplayText(vivaprocess.Global.slegNN);
                vivaprocess.Global.slegFlag = 0;
            }

            if (vivaprocess.Global.prava == "руководство" || vivaprocess.Global.prava == "adminko")
            {
                chkVse.Visible = true;
            }
            if (vivaprocess.Global.prava == "сбыт начальник" || vivaprocess.Global.prava == "менеджеры" || vivaprocess.Global.prava == "нач производства" || vivaprocess.Global.prava == "склад продукции" || vivaprocess.Global.prava == "снабжение")
            {
                dateDspCehFakt.Enabled = false;
                dateDspPokrasFakt.Enabled = false;
                dateDspOtkFakt.Enabled = false;
                dateDspSborkaFakt.Enabled = false;
                dateDspSkladFakt.Enabled = false;

                dateFasadCehFakt.Enabled = false;
                dateFasadPokrasFakt.Enabled = false;
                dateFasadOtkFakt.Enabled = false;
                dateFasadSborkaFakt.Enabled = false;
                dateFasadSkladFakt.Enabled = false;

                dateDspKraskaCehFakt.Enabled = false;
                dateDspKraskaPokrasFakt.Enabled = false;
                dateDspKraskaOtkFakt.Enabled = false;
                dateDspKraskaSborkaFakt.Enabled = false;
                dateDspKraskaSkladFakt.Enabled = false;

                dateDvpCehFakt.Enabled = false;
                dateDvpPokrasFakt.Enabled = false;
                dateDvpOtkFakt.Enabled = false;
                dateDvpSborkaFakt.Enabled = false;
                dateDvpSkladFakt.Enabled = false;

                dateFurniturCehFakt.Enabled = false;
                dateFurniturPokrasFakt.Enabled = false;
                dateFurniturOtkFakt.Enabled = false;
                dateFurniturSborkaFakt.Enabled = false;
                dateFurniturSkladFakt.Enabled = false;

                dateVitragCehFakt.Enabled = false;
                dateVitragPokrasFakt.Enabled = false;
                dateVitragOtkFakt.Enabled = false;
                dateVitragSborkaFakt.Enabled = false;
                dateVitragSkladFakt.Enabled = false;

                dateStoleshCehFakt.Enabled = false;
                dateStoleshPokrasFakt.Enabled = false;
                dateStoleshOtkFakt.Enabled = false;
                dateStoleshSborkaFakt.Enabled = false;
                dateStoleshSkladFakt.Enabled = false;

                dateSkinaliCehFakt.Enabled = false;
                dateSkinaliPokrasFakt.Enabled = false;
                dateSkinaliOtkFakt.Enabled = false;
                dateSkinaliSborkaFakt.Enabled = false;
                dateSkinaliSkladFakt.Enabled = false;

                dateDopolnitCehFakt.Enabled = false;
                dateDopolnitPokrasFakt.Enabled = false;
                dateDopolnitOtkFakt.Enabled = false;
                dateDopolnitSborkaFakt.Enabled = false;
                dateDopolnitSkladFakt.Enabled = false;

                chkVse.Visible = true;
            }
            if (vivaprocess.Global.prava == "нач производства" || vivaprocess.Global.prava == "цех" || vivaprocess.Global.prava == "склад продукции" || vivaprocess.Global.prava == "снабжение")
            {
                txtZakazClient.Enabled = false;
                dateDspCehFakt.Enabled = true;
                dateFasadCehFakt.Enabled = true;
                dateDspKraskaCehFakt.Enabled = true;
                dateDvpCehFakt.Enabled = true;
                dateFurniturCehFakt.Enabled = true;
                dateVitragCehFakt.Enabled = true;
                dateStoleshCehFakt.Enabled = true;
                dateSkinaliCehFakt.Enabled = true;
                dateDopolnitCehFakt.Enabled = true;
                lookUpClients.Enabled = false;
                dateInZakaz.Enabled = false;
                dateOtgruzPlan.Enabled = false;
                txtCena.Enabled = false;
                lookUpManager.Enabled = false;
                lookUpCategory.Enabled = false;
                btnCategory.Enabled = false;
                btnDelZakaz.Enabled = false;
                btnNewZakaz.Enabled = false;
                dateTehnol.Enabled = false;
                dateOtgruzFakt.Enabled = false;

                dateDspCehPlan.Enabled = false;
                dateDspPokrasPlan.Enabled = false;
                dateDspOtkPlan.Enabled = false;
                dateDspSborkaPlan.Enabled = false;
                dateDspSkladPlan.Enabled = false;
                dateDspSnabgen.Enabled = false;
                txtDspSnabgen.Enabled = false;
                txtDspMatNaSklad.Enabled = false;

                dateFasadCehPlan.Enabled = false;
                dateFasadPokrasPlan.Enabled = false;
                dateFasadOtkPlan.Enabled = false;
                dateFasadSborkaPlan.Enabled = false;
                dateFasadSkladPlan.Enabled = false;
                dateFasadSnabgen.Enabled = false;
                txtFasadSnabgen.Enabled = false;
                txtFasadMatNaSklad.Enabled = false;

                dateDspKraskaCehPlan.Enabled = false;
                dateDspKraskaPokrasPlan.Enabled = false;
                dateDspKraskaOtkPlan.Enabled = false;
                dateDspKraskaSborkaPlan.Enabled = false;
                dateDspKraskaSkladPlan.Enabled = false;
                dateDspKraskaSnabgen.Enabled = false;
                txtDspKraskaSnabgen.Enabled = false;
                txtDspKraskaMatNaSklad.Enabled = false;

                dateDvpCehPlan.Enabled = false;
                dateDvpPokrasPlan.Enabled = false;
                dateDvpOtkPlan.Enabled = false;
                dateDvpSborkaPlan.Enabled = false;
                dateDvpSkladPlan.Enabled = false;
                dateDvpSnabgen.Enabled = false;
                txtDvpSnabgen.Enabled = false;
                txtDvpMatNaSklad.Enabled = false;

                dateFurniturCehPlan.Enabled = false;
                dateFurniturPokrasPlan.Enabled = false;
                dateFurniturOtkPlan.Enabled = false;
                dateFurniturSborkaPlan.Enabled = false;
                dateFurniturSkladPlan.Enabled = false;
                dateFurniturSnabgen.Enabled = false;
                txtFurniturSnabgen.Enabled = false;
                txtFurniturMatNaSklad.Enabled = false;

                dateVitragCehPlan.Enabled = false;
                dateVitragPokrasPlan.Enabled = false;
                dateVitragOtkPlan.Enabled = false;
                dateVitragSborkaPlan.Enabled = false;
                dateVitragSkladPlan.Enabled = false;
                dateVitragSnabgen.Enabled = false;
                txtVitragSnabgen.Enabled = false;
                txtVitragMatNaSklad.Enabled = false;

                dateStoleshCehPlan.Enabled = false;
                dateStoleshPokrasPlan.Enabled = false;
                dateStoleshOtkPlan.Enabled = false;
                dateStoleshSborkaPlan.Enabled = false;
                dateStoleshSkladPlan.Enabled = false;
                dateStoleshSnabgen.Enabled = false;
                txtStoleshSnabgen.Enabled = false;
                txtStoleshMatNaSklad.Enabled = false;

                dateSkinaliCehPlan.Enabled = false;
                dateSkinaliPokrasPlan.Enabled = false;
                dateSkinaliOtkPlan.Enabled = false;
                dateSkinaliSborkaPlan.Enabled = false;
                dateSkinaliSkladPlan.Enabled = false;
                dateSkinaliSnabgen.Enabled = false;
                txtSkinaliSnabgen.Enabled = false;
                txtSkinaliMatNaSklad.Enabled = false;

                dateDopolnitCehPlan.Enabled = false;
                dateDopolnitPokrasPlan.Enabled = false;
                dateDopolnitOtkPlan.Enabled = false;
                dateDopolnitSborkaPlan.Enabled = false;
                dateDopolnitSkladPlan.Enabled = false;
                dateDopolnitSnabgen.Enabled = false;
                txtDopolnitSnabgen.Enabled = false;
                txtDopolnitMatNaSklad.Enabled = false;

                chkVse.Visible = false;
            }
            if (vivaprocess.Global.prava == "технолог")
            {
                txtCena.Visible = false;
                btnDelZakaz.Enabled = false;
                btnNewZakaz.Enabled = false;
                btnSaveZakaz.Enabled = false;
                btnAddReklamac.Enabled = false;
            }
            if (vivaprocess.Global.prava == "цех" || vivaprocess.Global.prava == "склад продукции" || vivaprocess.Global.prava == "снабжение")
            {
                txtCena.Visible = false;
                txtZakazClient.Enabled = false;
                dateDspSkladFakt.Enabled = false;
                dateFasadSkladFakt.Enabled = false;
                dateDspKraskaSkladFakt.Enabled = false;
                dateDvpSkladFakt.Enabled = false;
                dateFurniturSkladFakt.Enabled = false;
                dateVitragSkladFakt.Enabled = false;
                dateStoleshSkladFakt.Enabled = false;
                dateSkinaliSkladFakt.Enabled = false;
                dateDopolnitSkladFakt.Enabled = false;
                lookUpTehnolog.Enabled = false;
            }
            if (vivaprocess.Global.prava == "склад продукции")
            {
                dateDspSkladFakt.Enabled = true;
                dateFasadSkladFakt.Enabled = true;
                dateDspKraskaSkladFakt.Enabled = true;
                dateDvpSkladFakt.Enabled = true;
                dateFurniturSkladFakt.Enabled = true;
                dateVitragSkladFakt.Enabled = true;
                dateStoleshSkladFakt.Enabled = true;
                dateSkinaliSkladFakt.Enabled = true;
                dateDopolnitSkladFakt.Enabled = true;

                dateDspPokrasFakt.Enabled = true;
                dateFasadPokrasFakt.Enabled = true;
                dateDspKraskaPokrasFakt.Enabled = true;
                dateDvpPokrasFakt.Enabled = true;
                dateFurniturPokrasFakt.Enabled = true;
                dateVitragPokrasFakt.Enabled = true;
                dateStoleshPokrasFakt.Enabled = true;
                dateSkinaliPokrasFakt.Enabled = true;
                dateDopolnitPokrasFakt.Enabled = true;

                txtDspMatNaSklad.Enabled = true;
                txtFasadMatNaSklad.Enabled = true;
                txtDspKraskaMatNaSklad.Enabled = true;
                txtDvpMatNaSklad.Enabled = true;
                txtFurniturMatNaSklad.Enabled = true;
                txtVitragMatNaSklad.Enabled = true;
                txtStoleshMatNaSklad.Enabled = true;
                txtSkinaliMatNaSklad.Enabled = true;
                txtDopolnitMatNaSklad.Enabled = true;

                dateDspCehFakt.Enabled = false;
                dateFasadCehFakt.Enabled = false;
                dateDspKraskaCehFakt.Enabled = false;
                dateDvpCehFakt.Enabled = false;
                dateFurniturCehFakt.Enabled = false;
                dateVitragCehFakt.Enabled = false;
                dateStoleshCehFakt.Enabled = false;
                dateSkinaliCehFakt.Enabled = false;
                dateDopolnitCehFakt.Enabled = false;
            }
            if (vivaprocess.Global.prava == "снабжение")
            {
                dateDspCehFakt.Enabled = false;
                dateFasadCehFakt.Enabled = false;
                dateDspKraskaCehFakt.Enabled = false;
                dateDvpCehFakt.Enabled = false;
                dateFurniturCehFakt.Enabled = false;
                dateVitragCehFakt.Enabled = false;
                dateStoleshCehFakt.Enabled = false;
                dateSkinaliCehFakt.Enabled = false;
                dateDopolnitCehFakt.Enabled = false;

                btnAddReklamac.Enabled = false;

                txtDspSnabgen.Enabled = true;
                txtFasadSnabgen.Enabled = true;
                txtDspKraskaSnabgen.Enabled = true;
                txtDvpSnabgen.Enabled = true;
                txtFurniturSnabgen.Enabled = true;
                txtVitragSnabgen.Enabled = true;
                txtStoleshSnabgen.Enabled = true;
                txtSkinaliSnabgen.Enabled = true;
                txtDopolnitSnabgen.Enabled = true;
            }
        }
    }
}